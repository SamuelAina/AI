<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editable Cards</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            padding: 20px;
        }
        .card {
            border: 1px solid #ccc;
            background-color: #fff;
            padding: 20px;
            margin: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            width: 320px;
            position: relative;
        }
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        .card-content {
            display: none;
        }
        .card-content.show {
            display: block;
        }
        .card-content div {
            margin-bottom: 10px;
        }
        .edit-icon, .delete-icon {
            cursor: pointer;
            position: absolute;
            top: 10px;
            display: none;
        }
        .edit-icon {
            right: 10px;
        }
        .delete-icon {
            right: 40px;
            color: red;
        }
        .card-content.show ~ .edit-icon, .card-content.show ~ .delete-icon {
            display: block;
        }
        .edit-mode input, .edit-mode select {
            border: 1px solid #000;
        }
        .card-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }
        .update-button {
            display: none;
        }
        .edit-mode ~ .card-actions .update-button {
            display: inline-block;
        }
        button {
            padding: 8px 12px;
            cursor: pointer;
            border: none;
            background-color: #007BFF;
            color: #fff;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        button:hover {
            background-color: #0056b3;
        }
        input, select {
            width: calc(100% - 20px);
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        input[disabled], select[disabled] {
            background-color: #f1f1f1;
        }
        a {
            color: #007BFF;
            text-decoration: none;
            cursor: pointer;
        }
        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <button id="add-user-button">Add User</button>
    <div id="cards-container">
    </div>

    <script>
        let data = [
            {"fullname":"Joe Bloggs","email":"xx@xx.com","phone":"111","dob":"1970-01-01","occupation":"Teacher","bank":"aaaa","currency":"USD","role":"investor"},
            {"fullname":"Fred Flop","email":"zz@zz.com","phone":"222","dob":"1970-02-02","occupation":"Student","bank":"bbbb","currency":"GBP","role":"investor"},
            {"fullname":"Lucy Canon","email":"yy@yy.com","phone":"333","dob":"1970-03-03","occupation":"Student","bank":"cccc","currency":"USD","role":"investor"},
            {"fullname":"Handy Mann","email":"aa@aa.com","phone":"444","dob":"1960-04-04","occupation":"Teacher","bank":"dddd","currency":"USD","role":"investor"},
            {"fullname":"Sue Ben","email":"bb@bb.com","phone":"555","dob":"1960-05-05","occupation":"Programmer","bank":"eeee","currency":"GBP","role":"investor"}
        ];

        const createCard = (person, index) => {
            const card = document.createElement('div');
            card.className = 'card';

            const header = document.createElement('div');
            header.className = 'card-header';

            const name = document.createElement('span');
            name.textContent = person.fullname;

            const editIcon = document.createElement('span');
            editIcon.className = 'edit-icon';
            editIcon.textContent = '✏️';
            editIcon.onclick = () => toggleEdit(card);

            const deleteIcon = document.createElement('span');
            deleteIcon.className = 'delete-icon';
            deleteIcon.textContent = '🗑️';
            deleteIcon.onclick = () => deleteCard(card, index);

            header.appendChild(name);

            const content = document.createElement('div');
            content.className = 'card-content';

            content.innerHTML = `
                <div>Full Name: <input type="text" value="${person.fullname}" disabled></div>
                <div>Email: <input type="text" value="${person.email}" disabled></div>
                <div>Phone: <input type="text" value="${person.phone}" disabled></div>
                <div>DOB: <input type="text" value="${person.dob}" disabled></div>
                <div>Occupation: <input type="text" value="${person.occupation}" disabled></div>
                <div>Bank: <input type="text" value="${person.bank}" disabled></div>
                <div>Preferred Currency: 
                    <select disabled>
                        <option value="USD" ${person.currency === 'USD' ? 'selected' : ''}>USD</option>
                        <option value="EUR" ${person.currency === 'EUR' ? 'selected' : ''}>EUR</option>
                        <option value="GBP" ${person.currency === 'GBP' ? 'selected' : ''}>GBP</option>
                    </select>
                </div>
                <div>Role: 
                    <select disabled>
                        <option value="investor" ${person.role === 'investor' ? 'selected' : ''}>Investor</option>
                        <option value="project_manager" ${person.role === 'project_manager' ? 'selected' : ''}>Project Manager</option>
                        <option value="freelancer" ${person.role === 'freelancer' ? 'selected' : ''}>Freelancer</option>
                        <option value="superuser" ${person.role === 'superuser' ? 'selected' : ''}>Superuser</option>
                    </select>
                </div>
            `;

            const actions = document.createElement('div');
            actions.className = 'card-actions';

            const toggleLink = document.createElement('a');
            toggleLink.textContent = 'Show More';
            toggleLink.href = '#';
            toggleLink.onclick = (e) => {
                e.preventDefault();
                toggleContent(card, toggleLink);
            };

            const updateButton = document.createElement('button');
            updateButton.className = 'update-button';
            updateButton.textContent = 'Update';
            updateButton.onclick = () => updateCard(updateButton, index);

            actions.appendChild(toggleLink);
            actions.appendChild(updateButton);

            card.appendChild(header);
            card.appendChild(content);
            card.appendChild(actions);
            card.appendChild(editIcon);
            card.appendChild(deleteIcon);

            return card;
        };

        const toggleContent = (card, link) => {
            const content = card.querySelector('.card-content');
            const editIcon = card.querySelector('.edit-icon');
            const deleteIcon = card.querySelector('.delete-icon');
            const updateButton = card.querySelector('.update-button');
            const inputs = card.querySelectorAll('input, select');
            
            content.classList.toggle('show');
            const isExpanded = content.classList.contains('show');

            editIcon.style.display = isExpanded ? 'block' : 'none';
            deleteIcon.style.display = isExpanded ? 'block' : 'none';
            link.textContent = isExpanded ? 'Show Less' : 'Show More';

            if (!isExpanded) {
                inputs.forEach(input => {
                    if (!input.disabled) {
                        input.disabled = true;
                        input.classList.remove('edit-mode');
                    }
                });
                updateButton.style.display = 'none';
            }
        };

        const toggleEdit = (card) => {
            const inputs = card.querySelectorAll('input, select');
            const updateButton = card.querySelector('.update-button');
            inputs.forEach(input => {
                input.disabled = !input.disabled;
                input.classList.toggle('edit-mode');
            });
            updateButton.style.display = updateButton.style.display === 'inline-block' ? 'none' : 'inline-block';
        };

        const updateCard = (button, index) => {
            const card = button.closest('.card');
            const inputs = card.querySelectorAll('input, select');
            data[index] = {
                fullname: inputs[0].value,
                email: inputs[1].value,
                phone: inputs[2].value,
                dob: inputs[3].value,
                occupation: inputs[4].value,
                bank: inputs[5].value,
                currency: inputs[6].value,
                role: inputs[7].value
            };
            inputs.forEach(input => {
                if (input.classList.contains('edit-mode')) {
                    input.disabled = true;
                    input.classList.remove('edit-mode');
                }
            });
            button.style.display = 'none';
            alert('Card updated!');
            console.log(data);
        };

        const deleteCard = (card, index) => {
            card.remove();
            data.splice(index, 1);
            alert('Card deleted!');
            console.log(data);
            renderCards();  // Re-render cards to update the indices
        };

        const renderCards = () => {
            const container = document.getElementById('cards-container');
            container.innerHTML = '';
            data.forEach((person, index) => {
                container.appendChild(createCard(person, index));
            });
        };

        document.getElementById('add-user-button').addEventListener('click', () => {
            const newUser = {
                fullname: 'New User',
                email: '',
                phone: '',
                dob: '',
                occupation: '',
                bank: '',
                currency: 'USD',
                role: 'investor'
            };
            data.push(newUser);
            renderCards();
        });

        renderCards();
    </script>
</body>
</html>
