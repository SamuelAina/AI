<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Editable Table</title>
<link rel="stylesheet" href="style.css">
</head>
<body>
<h2>Editable Table</h2>
<table id="editableTable">
    <thead>
        <tr>
            <th>User Role</th>
            <th>Button</th>
            <th>Status</th>
            <th>Visibility</th>
        </tr>
    </thead>
    <tbody>
        <!-- Rows will be added dynamically here -->
    </tbody>
</table>
<button onclick="addRow()">Add New Row</button>
<script src="script.js"></script>
</body>
</html>



==========================

window.onload = function() {
    addRow(); // Start with an empty row for user input
}

function addRow(userRole = '', button = '', status = '', visibility = false) {
    const table = document.getElementById("editableTable").getElementsByTagName('tbody')[0];
    const newRow = table.insertRow(table.rows.length);
    
    let cell1 = newRow.insertCell(0);
    let cell2 = newRow.insertCell(1);
    let cell3 = newRow.insertCell(2);
    let cell4 = newRow.insertCell(3);

    // User Role Dropdown
    let userRoleSelect = document.createElement('select');
    [
        {"og_id":65, "og_name":"ACFO/Delegate"},
        {"og_id":64, "og_name":"Admin (GFS Recipient)"},
        {"og_id":1, "og_name":"Admin (Superuser)"},
        {"og_id":66, "og_name":"Country User"}
    ].forEach(role => {
        let option = new Option(role.og_name, role.og_id);
        userRoleSelect.options.add(option);
    });
    userRoleSelect.value = userRole;
    cell1.appendChild(userRoleSelect);

    // Button Dropdown
    let buttonSelect = document.createElement('select');
    ["Update", "Approve", "Reject", "Refer Back"].forEach(bt => {
        let option = new Option(bt, bt);
        buttonSelect.options.add(option);
    });
    buttonSelect.value = button;
    cell2.appendChild(buttonSelect);

    // Status Dropdown
    let statusSelect = document.createElement('select');
    [
        {"st_id":26, "st_name":"Approved by ACFO"},
        {"st_id":1, "st_name":"New Request"},
        {"st_id":17, "st_name":"Pending ACFO Approval"},
        {"st_id":29, "st_name":"Referred back"},
        {"st_id":27, "st_name":"Rejected by ACFO"}
    ].forEach(st => {
        let option = new Option(st.st_name, st.st_id);
        statusSelect.options.add(option);
    });
    statusSelect.value = status;
    cell3.appendChild(statusSelect);

    // Visibility Checkbox
    let visibilityCheckbox = document.createElement('input');
    visibilityCheckbox.type = 'checkbox';
    visibilityCheckbox.checked = visibility;
    cell4.appendChild(visibilityCheckbox);
}

// Additional functions like save to server can be added here


========================================================

table {
    width: 100%;
    border-collapse: collapse;
}
th, td {
    padding: 8px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}
button {
    margin-top: 10px;
}
============================================================


[{"id":1,"og_id":65,"st_id":1,"button":"Approve","visible":true},{"id":2,"og_id":65,"st_id":1,"button":"Reject","visible":true},{"id":3,"og_id":65,"st_id":26,"button":"Reffer back","visible":true},{"id":4,"og_id":66,"st_id":0,"button":"Update","visible":true},{"id":5,"og_id":66,"st_id":29,"button":"Reffer back","visible":true},{"id":6,"og_id":64,"st_id":-99,"button":"Update","visible":true},{"id":7,"og_id":64,"st_id":-99,"button":"Reffer back","visible":true},{"id":8,"og_id":64,"st_id":-99,"button":"Approve","visible":true},{"id":9,"og_id":64,"st_id":-99,"button":"Reject","visible":true},{"id":10,"og_id":1,"st_id":-99,"button":"Update","visible":true},{"id":11,"og_id":1,"st_id":-99,"button":"Reffer back","visible":true},{"id":12,"og_id":1,"st_id":-99,"button":"Approve","visible":true},{"id":13,"og_id":1,"st_id":-99,"button":"Reject","visible":true}]



===
window.onload = function() {
    const initialData = [
        {"id":1, "og_id":65, "st_id":1, "button":"Approve", "visible":true},
        {"id":2, "og_id":65, "st_id":1, "button":"Reject", "visible":true},
        {"id":3, "og_id":65, "st_id":26, "button":"Refer back", "visible":true},
        {"id":4, "og_id":66, "st_id":0, "button":"Update", "visible":true},
        {"id":5, "og_id":66, "st_id":29, "button":"Refer back", "visible":true},
        {"id":6, "og_id":64, "st_id":-99, "button":"Update", "visible":true},
        {"id":7, "og_id":64, "st_id":-99, "button":"Refer back", "visible":true},
        {"id":8, "og_id":64, "st_id":-99, "button":"Approve", "visible":true},
        {"id":9, "og_id":64, "st_id":-99, "button":"Reject", "visible":true},
        {"id":10, "og_id":1, "st_id":-99, "button":"Update", "visible":true},
        {"id":11, "og_id":1, "st_id":-99, "button":"Refer back", "visible":true},
        {"id":12, "og_id":1, "st_id":-99, "button":"Approve", "visible":true},
        {"id":13, "og_id":1, "st_id":-99, "button":"Reject", "visible":true}
    ];
    populateTable(initialData);
}

function populateTable(data) {
    data.forEach(item => {
        addRow(item.og_id, item.button, item.st_id, item.visible);
    });
}

function addRow(userRole = '', button = '', status = '', visibility = false) {
    const table = document.getElementById("editableTable").getElementsByTagName('tbody')[0];
    const newRow = table.insertRow(table.rows.length);
    
    let cell1 = newRow.insertCell(0);
    let cell2 = newRow.insertCell(1);
    let cell3 = newRow.insertCell(2);
    let cell4 = newRow.insertCell(3);
    let cell5 = newRow.insertCell(4); // Cell for the delete button

    // User Role Dropdown
    let userRoleSelect = document.createElement('select');
    // [...roles...] - User roles setup here as before
    cell1.appendChild(userRoleSelect);

    // Button Dropdown
    let buttonSelect = document.createElement('select');
    // [...buttons...] - Buttons setup here as before
    cell2.appendChild(buttonSelect);

    // Status Dropdown
    let statusSelect = document.createElement('select');
    // [...statuses...] - Statuses setup here as before
    cell3.appendChild(statusSelect);

    // Visibility Checkbox
    let visibilityCheckbox = document.createElement('input');
    visibilityCheckbox.type = 'checkbox';
    visibilityCheckbox.checked = visibility;
    cell4.appendChild(visibilityCheckbox);

    // Delete button
    let deleteBtn = document.createElement('button');
    deleteBtn.textContent = 'Delete';
    deleteBtn.onclick = function() { deleteRow(this); };
    cell5.appendChild(deleteBtn);
}

function deleteRow(btn) {
    let row = btn.parentNode.parentNode;
    row.parentNode.removeChild(row);
}

====================================
PREVIOUS

window.onload = function() {
    const initialData = [
        {"id":1, "og_id":65, "st_id":1, "button":"Approve", "visible":true},
        {"id":2, "og_id":65, "st_id":1, "button":"Reject", "visible":true},
        {"id":3, "og_id":65, "st_id":26, "button":"Reffer back", "visible":true},
        {"id":4, "og_id":66, "st_id":0, "button":"Update", "visible":true},
        {"id":5, "og_id":66, "st_id":29, "button":"Reffer back", "visible":true},
        {"id":6, "og_id":64, "st_id":-99, "button":"Update", "visible":true},
        {"id":7, "og_id":64, "st_id":-99, "button":"Reffer back", "visible":true},
        {"id":8, "og_id":64, "st_id":-99, "button":"Approve", "visible":true},
        {"id":9, "og_id":64, "st_id":-99, "button":"Reject", "visible":true},
        {"id":10, "og_id":1, "st_id":-99, "button":"Update", "visible":true},
        {"id":11, "og_id":1, "st_id":-99, "button":"Reffer back", "visible":true},
        {"id":12, "og_id":1, "st_id":-99, "button":"Approve", "visible":true},
        {"id":13, "og_id":1, "st_id":-99, "button":"Reject", "visible":true}
    ];
    populateTable(initialData);
}

function populateTable(data) {
    data.forEach(item => {
        addRow(item.og_id, item.button, item.st_id, item.visible);
    });
}

function addRow(userRole = '', button = '', status = '', visibility = false) {
    const table = document.getElementById("editableTable").getElementsByTagName('tbody')[0];
    const newRow = table.insertRow(table.rows.length);
    
    let cell1 = newRow.insertCell(0);
    let cell2 = newRow.insertCell(1);
    let cell3 = newRow.insertCell(2);
    let cell4 = newRow.insertCell(3);

    // User Role Dropdown
    let userRoleSelect = document.createElement('select');
    [
        {"og_id":65, "og_name":"ACFO/Delegate"},
        {"og_id":64, "og_name":"Admin (GFS Recipient)"},
        {"og_id":1, "og_name":"Admin (Superuser)"},
        {"og_id":66, "og_name":"Country User"}
    ].forEach(role => {
        let option = new Option(role.og_name, role.og_id);
        userRoleSelect.options.add(option);
    });
    userRoleSelect.value = userRole;
    cell1.appendChild(userRoleSelect);

    // Button Dropdown
    let buttonSelect = document.createElement('select');
    ["Update", "Approve", "Reject", "Refer Back"].forEach(bt => {
        let option = new Option(bt, bt);
        buttonSelect.options.add(option);
    });
    buttonSelect.value = button;
    cell2.appendChild(buttonSelect);

    // Status Dropdown
    let statusSelect = document.createElement('select');
    [
        {"st_id":26, "st_name":"Approved by ACFO"},
        {"st_id":1, "st_name":"New Request"},
        {"st_id":17, "st_name":"Pending ACFO Approval"},
        {"st_id":29, "st_name":"Referred back"},
        {"st_id":27, "st_name":"Rejected by ACFO"},
        {"st_id":0, "st_name":"None"},
        {"st_id":-99, "st_name":"Unavailable"}
    ].forEach(st => {
        let option = new Option(st.st_name, st.st_id);
        statusSelect.options.add(option);
    });
    statusSelect.value = status;
    cell3.appendChild(statusSelect);

    // Visibility Checkbox
    let visibilityCheckbox = document.createElement('input');
    visibilityCheckbox.type = 'checkbox';
    visibilityCheckbox.checked = visibility;
    cell4.appendChild(visibilityCheckbox);
}



===========================



function deleteAllRows() {
    const tableBody = document.getElementById("editableTable").getElementsByTagName('tbody')[0];
    while (tableBody.rows.length > 0) {
        tableBody.deleteRow(0);
    }
}


==================================================================
function highlightRow(rowNumber) {
    // Get the table body
    const tableBody = document.getElementById("editableTable").getElementsByTagName('tbody')[0];

    // Check if the row number is valid
    if(rowNumber >= 0 && rowNumber < tableBody.rows.length) {
        // Remove highlight from all rows
        for (let i = 0; i < tableBody.rows.length; i++) {
            tableBody.rows[i].style.border = 'none';  // Reset the border of all rows
        }
        
        // Apply a red border to the specified row
        tableBody.rows[rowNumber].style.border = '2px solid red';
    } else {
        console.error("Invalid row number");
    }
}


==========================================
function toggleHighlightRow(btn) {
    // Get the row containing the clicked button
    let row = btn.parentNode.parentNode;

    // Check the current border style to determine whether to highlight or remove highlight
    if (row.style.border === '2px solid red') {
        // If already highlighted, remove the highlight
        row.style.border = 'none';
    } else {
        // If not highlighted, apply the red border
        row.style.border = '2px solid red';
    }
}

function deleteRow(btn) {
    toggleHighlightRow(btn);  // Toggle the highlight on click

    // Optional: Remove the row if needed
    // let row = btn.parentNode.parentNode;
    // row.parentNode.removeChild(row);
}


=================================================================

function addRow(userRole = '', button = '', status = '', visibility = false) {
    const table = document.getElementById("editableTable").getElementsByTagName('tbody')[0];
    const newRow = table.insertRow(table.rows.length);

    // Each cell setup
    let cell1 = newRow.insertCell(0);
    let cell2 = newRow.insertCell(1);
    let cell3 = newRow.insertCell(2);
    let cell4 = newRow.insertCell(3);

    // User Role Dropdown
    let userRoleSelect = document.createElement('select');
    userRoleSelect.dataset.original = userRole;  // Store original value for comparison
    [
        {"og_id":65, "og_name":"ACFO/Delegate"},
        {"og_id":64, "og_name":"Admin (GFS Recipient)"},
        {"og_id":1, "og_name":"Admin (Superuser)"},
        {"og_id":66, "og_name":"Country User"}
    ].forEach(role => {
        let option = new Option(role.og_name, role.og_id);
        userRoleSelect.options.add(option);
    });
    userRoleSelect.value = userRole;
    cell1.appendChild(userRoleSelect);
    addChangeListener(userRoleSelect);

    // Status Dropdown
    let statusSelect = document.createElement('select');
    statusSelect.dataset.original = status;
    [
        {"st_id":26, "st_name":"Approved by ACFO"},
        {"st_id":1, "st_name":"New Request"},
        {"st_id":17, "st_name":"Pending ACFO Approval"},
        {"st_id":29, "st_name":"Referred back"},
        {"st_id":27, "st_name":"Rejected by ACFO"}
    ].forEach(st => {
        let option = new Option(st.st_name, st.st_id);
        statusSelect.options.add(option);
    });
    statusSelect.value = status;
    cell3.appendChild(statusSelect);
    addChangeListener(statusSelect);

    // Visibility Checkbox
    let visibilityCheckbox = document.createElement('input');
    visibilityCheckbox.type = 'checkbox';
    visibilityCheckbox.checked = visibility;
    visibilityCheckbox.dataset.original = visibility;
    cell4.appendChild(visibilityCheckbox);
    addChangeListener(visibilityCheckbox);
}

function addChangeListener(element) {
    element.addEventListener('change', function() {
        if (this.type === 'checkbox') {
            this.style.backgroundColor = (this.checked.toString() === this.dataset.original) ? '' : 'yellow';
        } else {
            this.style.backgroundColor = (this.value === this.dataset.original) ? '' : 'yellow';
        }
    });
}

[{"og_id":65,"button":"update","st_id":26,"visibility":1},{"og_id":65,"button":"update","st_id":26,"visibility":1}...]



function extractTableData() {
    const table = document.getElementById("editableTable").getElementsByTagName('tbody')[0];
    const rows = table.rows;
    const jsonData = [];

    for (let i = 0; i < rows.length; i++) {
        const row = rows[i];
        const userRoleSelect = row.cells[0].getElementsByTagName('select')[0];
        const buttonSelect = row.cells[1].getElementsByTagName('select')[0];
        const statusSelect = row.cells[2].getElementsByTagName('select')[0];
        const visibilityCheckbox = row.cells[3].getElementsByTagName('input')[0];

        const dataObject = {
            og_id: parseInt(userRoleSelect.value),
            button: buttonSelect.value,
            st_id: parseInt(statusSelect.value),
            visibility: visibilityCheckbox.checked ? 1 : 0
        };

        jsonData.push(dataObject);
    }

    return JSON.stringify(jsonData);
}
==================================


{"_f":"usp_update_org_status_buttons","_p":"Tracker_TestDb01_ONCD04","JsonData":"{\"formData\":\"[{\\\"og_id\\\":65,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":65,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":65,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":26,\\\"visibility\\\":1},{\\\"og_id\\\":66,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":26,\\\"visibility\\\":1},{\\\"og_id\\\":66,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":29,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":17,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":17,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":17,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":29,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":26,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":27,\\\"visibility\\\":1}]\"}"}

++++++++


DECLARE @json NVARCHAR(MAX) = '{"_f":"usp_update_org_status_buttons","_p":"Tracker_TestDb01_ONCD04","JsonData":"{\"formData\":\"[{\\\"og_id\\\":65,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":65,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":65,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":26,\\\"visibility\\\":1},{\\\"og_id\\\":66,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":26,\\\"visibility\\\":1},{\\\"og_id\\\":66,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":29,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":17,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":17,\\\"visibility\\\":1},{\\\"og_id\\\":64,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":17,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":1,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Update\\\",\\\"st_id\\\":29,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Approve\\\",\\\"st_id\\\":26,\\\"visibility\\\":1},{\\\"og_id\\\":1,\\\"button\\\":\\\"Reject\\\",\\\"st_id\\\":27,\\\"visibility\\\":1}]\"}"}'

-- Extracting the formData JSON string
DECLARE @formData NVARCHAR(MAX)

SET @formData = (SELECT JSON_VALUE(@json, '$.JsonData'))
SET @formData = (SELECT JSON_VALUE(@formData, '$.formData'))

-- Parsing the formData JSON array
SELECT 
    JSON_VALUE(f.value, '$.og_id') AS og_id,
    JSON_VALUE(f.value, '$.button') AS button,
    JSON_VALUE(f.value, '$.st_id') AS st_id
FROM 
    OPENJSON(@formData) WITH (value NVARCHAR(MAX) '$') f
=====================================================================

[{"og_id":65,"button":"Approve","st_id":1,"visibility":1},{"og_id":65,"button":"Reject","st_id":1,"visibility":1},{"og_id":65,"button":"Reject","st_id":26,"visibility":1},{"og_id":66,"button":"Update","st_id":26,"visibility":1},{"og_id":66,"button":"Approve","st_id":29,"visibility":1},{"og_id":64,"button":"Update","st_id":1,"visibility":1},{"og_id":64,"button":"Reject","st_id":17,"visibility":1},{"og_id":64,"button":"Approve","st_id":17,"visibility":1},{"og_id":64,"button":"Reject","st_id":17,"visibility":1},{"og_id":1,"button":"Update","st_id":1,"visibility":1},{"og_id":1,"button":"Update","st_id":29,"visibility":1},{"og_id":1,"button":"Approve","st_id":26,"visibility":1},{"og_id":1,"button":"Reject","st_id":27,"visibility":1}]

++++++


DECLARE @json NVARCHAR(MAX) = '[{"og_id":65,"button":"Approve","st_id":1,"visibility":1},{"og_id":65,"button":"Reject","st_id":1,"visibility":1},{"og_id":65,"button":"Reject","st_id":26,"visibility":1},{"og_id":66,"button":"Update","st_id":26,"visibility":1},{"og_id":66,"button":"Approve","st_id":29,"visibility":1},{"og_id":64,"button":"Update","st_id":1,"visibility":1},{"og_id":64,"button":"Reject","st_id":17,"visibility":1},{"og_id":64,"button":"Approve","st_id":17,"visibility":1},{"og_id":64,"button":"Reject","st_id":17,"visibility":1},{"og_id":1,"button":"Update","st_id":1,"visibility":1},{"og_id":1,"button":"Update","st_id":29,"visibility":1},{"og_id":1,"button":"Approve","st_id":26,"visibility":1},{"og_id":1,"button":"Reject","st_id":27,"visibility":1}]';

-- Remove the outer square brackets
SET @json = SUBSTRING(@json, 2, LEN(@json) - 2);

-- Replace the JSON object delimiters with a delimiter that STRING_SPLIT can handle
SET @json = REPLACE(@json, '},{', '}|{');

-- Add a leading and trailing delimiter for easy parsing
SET @json = '|' + @json + '|';

WITH JsonObjects AS (
    SELECT 
        value = SUBSTRING(@json, start_pos, CHARINDEX('|', @json, start_pos) - start_pos)
    FROM (
        SELECT 
            start_pos = number + 1
        FROM master.dbo.spt_values
        WHERE type = 'P' AND number <= LEN(@json)
            AND SUBSTRING(@json, number, 1) = '|'
    ) AS Positions
),
ParsedJson AS (
    SELECT 
        SUBSTRING(value, CHARINDEX('"og_id":', value) + 8, CHARINDEX(',', value, CHARINDEX('"og_id":', value)) - CHARINDEX('"og_id":', value) - 8) AS og_id,
        SUBSTRING(value, CHARINDEX('"button":', value) + 10, CHARINDEX('"', value, CHARINDEX('"button":', value) + 10) - CHARINDEX('"button":', value) - 10) AS button,
        SUBSTRING(value, CHARINDEX('"st_id":', value) + 8, CHARINDEX(',', value, CHARINDEX('"st_id":', value)) - CHARINDEX('"st_id":', value) - 8) AS st_id
    FROM JsonObjects
)

SELECT 
    CAST(og_id AS INT) AS og_id,
    button,
    CAST(st_id AS INT) AS st_id
FROM ParsedJson;


Invalid length parameter passed to the LEFT or SUBSTRING function.
